# Kafka bootstrap only; AsyncAPI extension provides the rest for your channels
kafka.bootstrap.servers=localhost:9092
kogito.generate.rest=false

kafka.bootstrap.servers=localhost:9092

# Incoming CloudEvents (by type)
mp.messaging.incoming.order.created.connector=smallrye-kafka
mp.messaging.incoming.order.created.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming.payment.confirmed.connector=smallrye-kafka
mp.messaging.incoming.payment.confirmed.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Outgoing CloudEvents (by type)
mp.messaging.outgoing.order.accepted.connector=smallrye-kafka
mp.messaging.outgoing.order.accepted.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.order.rejected.connector=smallrye-kafka
mp.messaging.outgoing.order.rejected.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.inventory.release.connector=smallrye-kafka
mp.messaging.outgoing.inventory.release.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.order.cancelled.connector=smallrye-kafka
mp.messaging.outgoing.order.cancelled.value.serializer=org.apache.kafka.common.serialization.StringSerializer
